(define (repeated foo n)
  (lambda (x)
    (define (iter k result)
      (if (= k 0)
          result
          (iter (- k 1) (foo result))
      )
    )
    (iter n x)
  )
)

(define dx 0.00001)
(define (smooth f)
  (lambda (x)
    (/ (+ (f (- x dx))
          (f x)
          (f (+ x dx))
    ) 3)
  )
)

(define (n-fold-smooth f n)
  ((repeated smooth n) f)
)
